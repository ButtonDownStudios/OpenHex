apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'idea'

mainClassName='openhex.run.Test'

repositories {
    jcenter()
    mavenCentral()
}

ext.jmeVersion = "3.1.0-beta1"

project(":assets") {
    apply plugin: "java"

    buildDir = rootProject.file("build/assets")

    sourceSets {
        main {
            resources {
                srcDir '.'
            }
        }
    }
}

dependencies {

    //jMonkeyEngine
    compile "org.jmonkeyengine:jme3-core:$jmeVersion"
    compile "org.jmonkeyengine:jme3-desktop:$jmeVersion"
    compile "org.jmonkeyengine:jme3-lwjgl:$jmeVersion"

    //encog
    compile "org.encog:encog-core:3.3.0"

    //zay-es
    compile "com.simsilica:zay-es:1.2.1"

    runtime project(':assets')
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

task createDirs << {
	def pkg = 'openhex'
    def dirs = [
       	file("./src/main/java/$pkg"),
		file("./src/main/resources"),
		file("./assets/Interface"),
		file("./assets/MatDefs"),
		file("./assets/Materials"),
		file("./assets/Models"),
		file("./assets/Scenes"),
		file("./assets/Shaders"),
		file("./assets/Sounds"),
		file("./assets/Textures"),
    ]

	dirs.each {
        	if( !it.exists() ) {
            		println "Creating " + it
            		it.mkdirs()
        	}
        	if( it.listFiles().length == 0 ) {
            		def stub = new File(it, 'removeme.txt')
            		println "Creating stub file to allow git checkin, file:$stub"
            		stub.text = "Remove me when there are files here."
       		}
    	}
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'src/run/java'
		}
	}
}

jar {
  manifest {
    attributes(
      'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
      'Main-Class': 'openhex.run.Test'
    )
  }
}
